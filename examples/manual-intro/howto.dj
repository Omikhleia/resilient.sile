
{.none .pagebreak}
---

![The resilient ecosystem at a glance (simplified).](./examples/resilient-ecosystem.dot){width="99%fw"}

{.unnumbered}
# How to use this manual

```=sile
\begin[rule=0.4pt]{epigraph}
In a well-made book, where designer, compositor and printer have all done their jobs,
no matter how many thousands of lines and pages, the letters are alive.
They dance in their seats. Sometimes they rise and dance in the margins and aisles.
\source{Robert Bringhurst,\break\em{The Elements of Typographic Style}.}
\end{epigraph}
```

Your are ready to typeset some work---ideally, the _perfect book_ of your
dreams---and towards that aim, you consider using the present collection
of classes and packages.
That's a very good start! Let us guide you through the process.

{.unnumbered}
## Picking a mark-up language

Obviously, you first need to pick a mark-up language for your content.
If you are reading this document, you probably already browsed through the SILE Manual and consider using its SIL language.

You might do so, indeed---but please note that Markdown and Djot are acceptable options too.
If you properly installed the resilient collection, then the *[markdown.sile](https://github.com/Omikhleia/markdown.sile)* module is installed too.
When used with this collection, it's leveraged with additional capabilities.

On the other hand, if you are not already experienced with the SIL language and your content is reasonably simple, this author would recommend to seriously consider Markdown or Djot (with even a preference for Djot when possible).
Not only are they simpler and lightweight, but they are also more portable, with great tools such as Pandoc to convert them to other formats, so you won't be stuck with a custom mark-up.

![](./temp/manicule.svg){height="0.60em"} Check the _Markdown and Djot to PDF with SILE_ user guide.

{.unnumbered}
## Assembling your content

Now, let's consider you have some input content ready, as an assortment of files, possibly in different mark-up languages:
For any long work, indeed, you likely split your content into chapters or any other appropriate division scheme; and you may have used Markdown, Djot or even SIL depending on the effects to achieve.

You now need assemble all these files in some wrapper document, to pick a paper size, a page layout and to set some global parameters (such as, minimally, the default font and language).
You can do that with the SIL language in a variety of ways, having at hands all the required low-level constructs.
It is perfectly legit, so follow that path if it has your preference.

Yet, the task could be made more straightforward, right?
Truly, the resilient "master document format" aims at simplifying and streamlining that process.

![](./temp/manicule.svg){height="0.60em"} Read part [](#master-document){.section}.

{.unnumbered}
## Styling your book

You have chosen a paper size for your book, and are using one of our classes, say the *resilient.book* class.
It's time then to select a page layout.

![](./temp/manicule.svg){height="0.60em"} Read part [](#page-layout){.section}.

You are nearly done.
You may want now to customize the document styles according your needs.

![](./temp/manicule.svg){height="0.60em"} Read part [](#styling-paradigm){.section}.

{.unnumbered}
## Going further

In composing your book, you may need some of the cool packages provided here.

![](./temp/manicule.svg){height="0.65em"} Read part [](#resilient-packages){.section}.

Likewise, you may need more details about the available document classes and their capabilities.

![](./temp/manicule.svg){height="0.65em"} Read part [](#resilient-classes){.section}.

{.pendant}
---
